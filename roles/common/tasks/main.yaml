---
# Install packages

- name: Install packages
  apt:
    name: ['git', 'apache2', 'mariadb-server', 'php8.1-fpm', 'php8.1-mysql',
           'php8.1-curl', 'php8.1-memcache', 'php8.1-memcached', 'php8.1-intl',
           'php8.1-mbstring', 'php8.1-xml', 'php8.1-zip', 'php8.1-apcu',
           'python3-certbot-apache', 'python3-mysqldb', 'sphinxsearch',
           'mp3gain', 'unzip', 'memcached', 'imagemagick']
    state: latest
    update_cache: yes
  become: true

# MariaDB variables

- name: innodb_buffer_pool_size
  lineinfile:
    path: /etc/mysql/mariadb.conf.d/50-server.cnf
    regexp: '^#*innodb_buffer_pool_size\s*=.*$'
    line: 'innodb_buffer_pool_size = 5G'
  become: true
  notify: Restart MariaDB

# librivox group and /librivox directory

- name: librivox group
  group:
    name: librivox
    state: present
  become: true

- name: /librivox directory
  # This needs to be root:root 0755 because it's part of the `mc` user chroot
  # path (/librivox/shared/uploads) as per the sshd_config man page for the
  # ChrootDirectory directive.
  file:
    path: /librivox
    owner: root
    group: root
    mode: 0755
    state: directory
  become: true

- name: /librivox/bin directory
  file:
    path: /librivox/bin
    state: directory
    owner: "{{ ansible_facts['user_id'] }}"
    group: "{{ ansible_facts['user_id'] }}"
  become: true

# Cronjob

- name: Upload daily-cron
  copy:
    src: daily-cron
    dest: /librivox/bin/daily-cron
    mode: 0755

- name: daily-cron cronjob
  cron:
    name: daily-cron
    minute: '45'
    hour: '3'
    job: /librivox/bin/daily-cron

# Apache

- name: MaxRequestWorkers line
  lineinfile:
    dest: /etc/apache2/mods-enabled/mpm_event.conf
    regexp: 'MaxRequestWorkers'
    line: "\tMaxRequestWorkers\t300"
  become: true
  notify: Restart Apache

- name: Apache modules
  apache2_module:
    name: '{{ item }}'
    state: present
  with_items:
    - ssl
    - proxy_fcgi
  become: true
  notify: Restart Apache

# PHP

- name: PHP pool configuration file
  template:
    src: www.conf
    dest: /etc/php/8.1/fpm/pool.d/www.conf
  become: true
  notify: Restart PHP

# SphinxSearch

- name: /librivox/sphinxsearch/data directory
  file:
    path: /librivox/sphinxsearch/data
    state: directory
    owner: "{{ ansible_facts['user_id'] }}"
    group: sphinxsearch
    mode: 0775
    recurse: true
  become: true

- name: Enable sphinx
  lineinfile:
    dest: /etc/default/sphinxsearch
    regexp: 'START=no'
    line: 'START=yes'
  become: true
  notify: Restart Sphinx

- name: Sphinx configuration files
  copy:
    src: "{{ item }}"
    dest: "/etc/sphinxsearch/{{ item }}"
  with_items:
    - common.conf
    - sphinx.conf
  become: true

- name: Upload sphinx-index-update
  copy:
    src: sphinx-index-update
    dest: /librivox/bin/sphinx-index-update
    mode: 0755

- name: sphinx-index-update cronjob
  cron:
    name: sphinx-index-update
    minute: "*"
    job: /librivox/bin/sphinx-index-update
  # We need to be root to be able to SIGHUP sphinxsearch. The index files are
  # mode 0644, sphinxsearch can still read them even if thye're created by root.
  become: true

# SSH port

- name: sshd_config port
  lineinfile:
    dest: /etc/ssh/sshd_config
    regexp: '^Port '
    line: 'Port 58568'
  become: true

# Shared directories

- name: /librivox/shared/uploads directory
  # This serves as the home directory for the `mc` user, which is only allowed
  # SFTP. For obscure reasons, this needs to be owned root:root, and the *real*
  # uploads directory, /librivox/shared/uploads/uploads (yes, twice) is owned
  # www-data:librivox 0775.
  file:
    path: /librivox/shared/uploads
    state: directory
    recurse: yes
  become: true

- name: uploads and librivox-validator-books directories
  file:
    path: /librivox/shared/{{ item }}
    state: directory
    owner: www-data
    group: librivox
    mode: 0775
  with_items:
    - librivox-validator-books
    - uploads/uploads
  become: true

- name: Uploads robots.txt
  copy:
    src: robots.txt
    dest: /librivox/shared/uploads/uploads/robots.txt
  become: true

# TLS

# For simplicity, we run certbot with the --standalone option. Apache needs to
# be stopped so that certbot can bind port 80. Certbot will also install a
# renewal systemd timer.
#
# On staging, we can use:
# $ sudo certbot --test-cert --agree-tos -n -m notartom@gmail.com \
#     certonly --standalone -d staging.librivox.org \
#     --post-hook 'systemctl reload apache2.service'
#
# On production, we can use:
# $ sudo certbot --agree-tos -n -m notartom@gmail.com \
#     certonly --standalone -d librivox.org,forum.librivox.org,wiki.librivox.org \
#     --post-hook 'systemctl reload apache2.service'
#
# If we need to clean up, we can run:
# $ sudo find /etc/letsencrypt -name '*librivox.org*' -exec rm -r '{}' \;

# NOTE(artom) On staging we just manually copy over
# /etc/letsencrypt/live/librivox.org from produciton.

# Backups

- name: Backups directories
  file:
    path: '{{ item }}'
    state: directory
    owner: artom
    group: artom
    recurse: true
  with_items:
    - /backups/database
    - /backups/user-content/wiki/images
    - /backups/user-content/wp-content/uploads
  become: true
